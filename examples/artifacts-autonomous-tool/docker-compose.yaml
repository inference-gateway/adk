---
services:
  inference-gateway:
    image: ghcr.io/inference-gateway/inference-gateway:latest
    pull_policy: always
    ports:
      - 8080:8080
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      CLOUDFLARE_API_KEY: ${CLOUDFLARE_API_KEY}
      COHERE_API_KEY: ${COHERE_API_KEY}
      MISTRAL_API_KEY: ${MISTRAL_API_KEY}
      LOG_LEVEL: info
    networks:
      - a2a-network

  server:
    build:
      context: ../..
      dockerfile: examples/Dockerfile.server
      args:
        AGENT_NAME: artifacts-autonomous-agent
        AGENT_DESCRIPTION: An A2A agent that autonomously creates artifacts using the create_artifact tool
        AGENT_VERSION: 0.1.0
        EXAMPLE_PATH: examples/artifacts-autonomous-tool
        COMPONENT: server
    depends_on:
      - inference-gateway
    environment:
      ENVIRONMENT: development
      A2A_SERVER_PORT: 8080
      A2A_DEBUG: true
      A2A_CAPABILITIES_STREAMING: true
      A2A_CAPABILITIES_PUSH_NOTIFICATIONS: false
      A2A_AGENT_CLIENT_BASE_URL: http://inference-gateway:8080/v1
      A2A_AGENT_CLIENT_PROVIDER: ${A2A_AGENT_CLIENT_PROVIDER}
      A2A_AGENT_CLIENT_MODEL: ${A2A_AGENT_CLIENT_MODEL}
      A2A_AGENT_CLIENT_TOOLS_CREATE_ARTIFACT: true
      A2A_ARTIFACTS_ENABLE: true
      A2A_ARTIFACTS_SERVER_PORT: 8081
      A2A_ARTIFACTS_SERVER_HOST: server
      A2A_ARTIFACTS_STORAGE_PROVIDER: filesystem
      A2A_ARTIFACTS_STORAGE_BASE_PATH: /artifacts
    volumes:
      - ./server/artifacts:/artifacts
    healthcheck:
      test:
        - CMD
        - curl
        - --fail
        - --silent
        - http://localhost:8080/health
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - a2a-network

  client:
    build:
      context: ../..
      dockerfile: examples/Dockerfile.client
      args:
        EXAMPLE_PATH: examples/artifacts-autonomous-tool
        COMPONENT: client
    depends_on:
      server:
        condition: service_healthy
    environment:
      SERVER_URL: http://server:8080
      DOWNLOADS_DIR: /downloads
    volumes:
      - ./client/downloads:/downloads
    networks:
      - a2a-network

  a2a-debugger:
    image: ghcr.io/inference-gateway/a2a-debugger:latest
    pull_policy: always
    entrypoint:
      - /a2a
      - --server-url
      - http://server:8080
    networks:
      - a2a-network
    profiles:
      - manual

networks:
  a2a-network:
    driver: bridge
