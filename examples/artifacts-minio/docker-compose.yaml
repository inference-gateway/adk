---
services:
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # MinIO API
      - "9001:9001"  # MinIO Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    networks:
      - a2a-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbucket:
    image: minio/mc:latest
    depends_on:
      - minio
    environment:
      MC_HOST_minio: http://minioadmin:minioadmin@minio:9000
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb minio/artifacts;
      /usr/bin/mc policy set public minio/artifacts;
      exit 0;
      "
    networks:
      - a2a-network

  server:
    build:
      context: ../..
      dockerfile: examples/artifacts-minio/server/Dockerfile
      args:
        AGENT_NAME: artifacts-minio-agent
        AGENT_DESCRIPTION: An agent that creates and serves artifacts using MinIO cloud storage
        AGENT_VERSION: 0.1.0
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      minio:
        condition: service_healthy
      createbucket:
        condition: service_completed_successfully
    environment:
      ENVIRONMENT: development
      A2A_AGENT_NAME: artifacts-minio-agent
      A2A_AGENT_DESCRIPTION: An agent that creates and serves artifacts using MinIO cloud storage
      A2A_AGENT_VERSION: 0.1.0
      A2A_SERVER_PORT: 8080
      A2A_DEBUG: true
      A2A_CAPABILITIES_STREAMING: false
      A2A_CAPABILITIES_PUSH_NOTIFICATIONS: false
      A2A_ARTIFACTS_ENABLE: true
      A2A_ARTIFACTS_STORAGE_PROVIDER: minio
      A2A_ARTIFACTS_STORAGE_ENDPOINT: minio:9000
      A2A_ARTIFACTS_STORAGE_ACCESS_KEY: minioadmin
      A2A_ARTIFACTS_STORAGE_SECRET_KEY: minioadmin
      A2A_ARTIFACTS_STORAGE_BUCKET_NAME: artifacts
      A2A_ARTIFACTS_STORAGE_USE_SSL: false
      A2A_ARTIFACTS_SERVER_PORT: 8081
      A2A_ARTIFACTS_SERVER_HOST: server
    networks:
      - a2a-network

  client:
    build:
      context: ../..
      dockerfile: examples/artifacts-minio/client/Dockerfile
    depends_on:
      server:
        condition: service_started
    environment:
      SERVER_URL: http://server:8080
      ARTIFACTS_URL: http://server:8081
      DOWNLOADS_DIR: /app/downloads
    volumes:
      - ./client/downloads:/app/downloads
    command: sh -c "sleep 15 && /app/client"
    networks:
      - a2a-network

volumes:
  minio-data:

networks:
  a2a-network:
    driver: bridge